name: Build and Deploy
run-name: Workflow run for ${{ github.ref }}
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      aws-deploy:
        type: boolean
        required: true
        default: false

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/obsrv-web-console:${{ github.ref_name }}

  aws-deploy:
    needs: docker-build
    if: github.event.inputs.aws-deploy == 'True'
    runs-on: ubuntu-latest
    environment: aws-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: v0.45.8
      - name: Terragrunt installation
        run: terragrunt --version
      
      - name: Install Terrahelp
        run: |
          curl -OL https://github.com/opencredo/terrahelp/releases/download/v0.4.3/terrahelp-linux-amd64
          sudo mv terrahelp-linux-amd64 /usr/bin/terrahelp
          chmod +x /usr/bin/terrahelp
          terrahelp -v
      - name: Clone the terraform deployment public repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.DEPLOY_REPO_PUBLIC }}
          path: obsrv-automation
          ref: ${{ vars.DEPLOY_REPO_REF }}
      
      - name: Clone the terraform deployment private repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.DEPLOY_REPO_PRIVATE }}
          path: obsrv-automation-ext
          token: ${{ secrets.CODE_ACCESS_TOKEN }}
          ref: ${{ vars.DEPLOY_REPO_REF }}
          
      - name: Fetch and update kubeconfig file
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: |
          aws eks --region ${{ vars.AWS_REGION }} update-kubeconfig --name ${{ vars.KUBERNETES_CLUSTER_NAME }}

      - name: Run terraform init and apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_TERRAFORM_BACKEND_BUCKET_NAME: ${{ vars.AWS_TERRAFORM_BACKEND_BUCKET_NAME }}
          AWS_TERRAFORM_BACKEND_BUCKET_REGION: ${{ vars.AWS_TERRAFORM_BACKEND_BUCKET_REGION }}
          KUBE_CONFIG_PATH: ~/.kube/config
        run: |
          cd obsrv-automation
          cp -r ../obsrv-automation-ext/terraform .
          cd terraform/aws
          terragrunt init
          terrahelp decrypt -simple-key=${{ secrets.DECRYPTION_KEY }} -file=vars/dev.tfvars
          terragrunt apply -var-file=vars/dev.tfvars --target=module.web_console \
          -var web_console_container_registry=${{ secrets.DOCKERHUB_USERNAME }} \
          -var web_console_image_tag=${{ github.ref_name }} -auto-approve

  azure-deploy:
    needs: docker-build
    if: vars.CLOUD_PROVIDER == 'azure'
    runs-on: ubuntu-latest
    steps:
      - name: Clone the terraform deployment repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.DEPLOY_REPO }}
          path: deploy
          ref: ${{ vars.DEPLOY_REPO_REF }}

      - name: Run terraform init and apply
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          cd deploy/terraform/azure
          terragrunt init
          terragrunt apply -auto-approve --target=module.dataset_api \
          -var dataset_api_container_registry=${{ secrets.DOCKERHUB_USERNAME }} \
          -var dataset_api_image_tag=${{ github.ref_name }}